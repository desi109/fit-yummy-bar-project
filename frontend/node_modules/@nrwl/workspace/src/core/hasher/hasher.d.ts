import { Task } from '../../tasks-runner/tasks-runner';
import { HashingImpl } from './hashing-impl';
import { NxJsonConfiguration, ProjectGraph } from '@nrwl/devkit';
export interface Hash {
    value: string;
    details?: {
        command: string;
        sources: {
            [projectName: string]: string;
        };
        implicitDeps: {
            [key: string]: string;
        };
        runtime: {
            [input: string]: string;
        };
    };
}
interface ImplicitHashResult {
    value: string;
    sources: {
        [fileName: string]: string;
    };
}
interface RuntimeHashResult {
    value: string;
    runtime: {
        [input: string]: string;
    };
}
export declare class Hasher {
    private readonly projectGraph;
    private readonly nxJson;
    private readonly options;
    static version: string;
    private implicitDependencies;
    private runtimeInputs;
    private fileHasher;
    private projectHashes;
    private hashing;
    constructor(projectGraph: ProjectGraph, nxJson: NxJsonConfiguration, options: any, hashing?: HashingImpl);
    hashTaskWithDepsAndContext(task: Task): Promise<Hash>;
    hashContext(): Promise<{
        implicitDeps: ImplicitHashResult;
        runtime: RuntimeHashResult;
    }>;
    hashSource(task: Task): Promise<string>;
    hashArray(values: string[]): string;
    private runtimeInputsHash;
    private implicitDepsHash;
    private hashGlobalConfig;
}
export {};
