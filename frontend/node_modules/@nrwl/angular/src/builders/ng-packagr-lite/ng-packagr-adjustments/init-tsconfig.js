"use strict";
/**
 * Adapted from the original ngPackagr source.
 *
 * This initialization however does not print a warning when Ivy is disabled,
 * since the incremental build packages are not intended for distribution
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.NX_INIT_TS_CONFIG_TRANSFORM = exports.initTsConfigTransformFactory = void 0;
const tslib_1 = require("tslib");
const transform_1 = require("ng-packagr/lib/graph/transform");
const nodes_1 = require("ng-packagr/lib/ng-package/nodes");
const tsconfig_1 = require("ng-packagr/lib/ts/tsconfig");
const transform_di_1 = require("ng-packagr/lib/graph/transform.di");
const init_tsconfig_di_1 = require("ng-packagr/lib/ng-package/entry-point/init-tsconfig.di");
const initTsConfigTransformFactory = (defaultTsConfig) => transform_1.transformFromPromise((graph) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    // Initialize tsconfig for each entry point
    const entryPoints = graph.filter(nodes_1.isEntryPoint);
    tsconfig_1.initializeTsConfig(defaultTsConfig, entryPoints);
    return graph;
}));
exports.initTsConfigTransformFactory = initTsConfigTransformFactory;
exports.NX_INIT_TS_CONFIG_TRANSFORM = transform_di_1.provideTransform({
    provide: init_tsconfig_di_1.INIT_TS_CONFIG_TOKEN,
    useFactory: exports.initTsConfigTransformFactory,
    deps: [init_tsconfig_di_1.DEFAULT_TS_CONFIG_TOKEN],
});
//# sourceMappingURL=init-tsconfig.js.map