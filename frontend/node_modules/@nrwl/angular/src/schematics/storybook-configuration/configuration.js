"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.storybookConfigurationGenerator = void 0;
const tslib_1 = require("tslib");
const schematics_1 = require("@angular-devkit/schematics");
const ngcli_adapter_1 = require("@nrwl/devkit/ngcli-adapter");
const project_name_1 = require("@nrwl/cypress/src/utils/project-name");
const workspace_1 = require("@nrwl/workspace");
const semver_1 = require("semver");
function assertCompatibleStorybookVersion() {
    let storybookVersion;
    try {
        require(require.resolve('@storybook/angular/package.json')).version;
    }
    catch (_a) { }
    if (storybookVersion && semver_1.lt(storybookVersion, '6.2.0')) {
        throw new Error('Incompatible Storybook Version');
    }
}
function default_1(schema) {
    assertCompatibleStorybookVersion();
    if (schema.generateCypressSpecs && !schema.generateStories) {
        throw new Error('Cannot set generateCypressSpecs to true when generateStories is set to false.');
    }
    return schematics_1.chain([
        schematics_1.externalSchematic('@nrwl/storybook', 'configuration', {
            name: schema.name,
            uiFramework: '@storybook/angular',
            configureCypress: schema.configureCypress,
            linter: schema.linter,
            cypressDirectory: schema.cypressDirectory,
        }),
        schema.generateStories ? generateStories(schema) : schematics_1.noop(),
    ]);
}
exports.default = default_1;
function generateStories(schema) {
    return (tree, context) => tslib_1.__awaiter(this, void 0, void 0, function* () {
        const workspace = yield workspace_1.getWorkspace(tree);
        const project = workspace.projects.get(schema.name);
        const e2eProjectName = project_name_1.getE2eProjectName(schema.name, project.root, schema.cypressDirectory);
        return schematics_1.schematic('stories', {
            name: schema.name,
            generateCypressSpecs: schema.configureCypress && schema.generateCypressSpecs,
            cypressProject: e2eProjectName,
        });
    });
}
exports.storybookConfigurationGenerator = ngcli_adapter_1.wrapAngularDevkitSchematic('@nrwl/angular', 'storybook-configuration');
//# sourceMappingURL=configuration.js.map