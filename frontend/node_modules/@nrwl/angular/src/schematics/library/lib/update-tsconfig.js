"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.updateTsConfig = void 0;
const schematics_1 = require("@angular-devkit/schematics");
const workspace_1 = require("@nrwl/workspace");
const ast_utils_1 = require("@nrwl/workspace/src/utils/ast-utils");
function updateRootConfig(options) {
    return (host) => workspace_1.updateJsonInTree('tsconfig.base.json', (json) => {
        const c = json.compilerOptions;
        c.paths = c.paths || {};
        delete c.paths[options.name];
        if (c.paths[options.importPath]) {
            throw new schematics_1.SchematicsException(`You already have a library using the import path "${options.importPath}". Make sure to specify a unique one.`);
        }
        c.paths[options.importPath] = [
            `${ast_utils_1.libsDir(host)}/${options.projectDirectory}/src/index.ts`,
        ];
        return json;
    });
}
function updateProjectConfig(options) {
    return workspace_1.updateJsonInTree(`${options.projectRoot}/tsconfig.lib.json`, (json) => {
        json.include = ['**/*.ts'];
        return json;
    });
}
function updateProjectProdConfig(options) {
    if (options.enableIvy) {
        return workspace_1.updateJsonInTree(`${options.projectRoot}/tsconfig.lib.prod.json`, (json) => {
            json.angularCompilerOptions['enableIvy'] = true;
            return json;
        });
    }
    return schematics_1.noop();
}
function updateTsConfig(options) {
    return schematics_1.chain([
        updateRootConfig(options),
        updateProjectConfig(options),
        updateProjectProdConfig(options),
    ]);
}
exports.updateTsConfig = updateTsConfig;
//# sourceMappingURL=update-tsconfig.js.map