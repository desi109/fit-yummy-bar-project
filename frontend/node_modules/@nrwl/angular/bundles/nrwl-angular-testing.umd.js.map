{"version":3,"file":"nrwl-angular-testing.umd.js","sources":["../../testing/src/testing-utils.ts","../../testing/nrwl-angular-testing.ts"],"names":["toArray","first"],"mappings":";;;;;;IAGA;AACA;AACI;AAEC;AAAO;AAEC;AACV;AAAqB;AACI;AACI;AAGP;AAAW;AAAQ,aAA5B,OAAO,CAAI,CAAgB;AAAI,QAC7C,OAAO,CAAC,CAAC,IAAI,CAACA,iBAAO,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;AACvC,IAAA,CAAC;AACD,IACA;AACA;AACI;AAEC;AAAO;AAEC;AACV;AAAqB;AACI;AAEvB;AAEoB;AAAW;AAAQ,aAA5B,SAAS,CAAI,CAAgB;AAAI,QAC/C,OAAO,CAAC,CAAC,IAAI,CAACC,eAAK,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;AACrC,IAAA;AACA;AAAC,IClCD;AACA;AAEA;AACO;AAAC;AACoB;AAA0B;AAA2B;AAAwC;AAAU;AAAQ;AAAyD;AAA0B;AAA2B;AAAoD;AAAU;AAAQ;AAA4C;AAA0B;AAA2B;AAAuC;AAAU;AAAQ;AAA6C;AAA0B;AAA2B;AAAwC;AAAU;AAAQ;AAA+B;AAAmC;AAAC;AAAmE;AAAC;AAAM","sourcesContent":["import { Observable } from 'rxjs';\nimport { first, toArray } from 'rxjs/operators';\n\n/**\n * @whatItDoes reads all the values from an observable and returns a promise\n * with an array of all values. This should be used in combination with async/await.\n *\n * ## Example\n *\n * ```typescript\n * const obs = of(1, 2, 3, 4);\n * const res = await readAll(obs)\n * expect(res).toEqual([1, 2, 3, 4]);\n * ```\n */\nexport function readAll<T>(o: Observable<T>): Promise<T[]> {\n  return o.pipe(toArray()).toPromise();\n}\n\n/**\n * @whatItDoes reads the first value from an observable and returns a promise\n * with it. This should be used in combination with async/await.\n *\n * ## Example\n *\n * ```typescript\n * const obs = of(1, 2, 3, 4);\n * const res = await readFirst(obs)\n * expect(res).toEqual(1);\n * ```\n */\nexport function readFirst<T>(o: Observable<T>): Promise<T> {\n  return o.pipe(first()).toPromise();\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}