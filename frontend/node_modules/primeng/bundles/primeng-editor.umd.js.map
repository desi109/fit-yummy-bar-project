{"version":3,"file":"primeng-editor.umd.js","sources":["../../src/app/components/editor/editor.ts","../../src/app/components/editor/primeng-editor.ts"],"names":["NG_VALUE_ACCESSOR","forwardRef","EventEmitter","DomHandler","Quill","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","Output","ContentChild","Header","Input","ContentChildren","PrimeTemplate","NgModule","CommonModule","SharedModule"],"mappings":"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","sourcesContent":["import {NgModule,Component,ElementRef,AfterViewInit,Input,Output,EventEmitter,ContentChild,forwardRef,ChangeDetectionStrategy, ViewEncapsulation, ContentChildren, QueryList, AfterContentInit, TemplateRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {SharedModule,Header, PrimeTemplate} from 'primeng/api'\nimport {DomHandler} from 'primeng/dom';\nimport {NG_VALUE_ACCESSOR, ControlValueAccessor} from '@angular/forms';\nimport * as Quill from \"quill\";\n\nexport const EDITOR_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => Editor),\n  multi: true\n};\n\n@Component({\n    selector: 'p-editor',\n    template: `\n        <div [ngClass]=\"'p-editor-container'\" [class]=\"styleClass\">\n            <div class=\"p-editor-toolbar\" *ngIf=\"toolbar || headerTemplate\">\n                <ng-content select=\"p-header\"></ng-content>\n                <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n            </div>\n            <div class=\"p-editor-toolbar\" *ngIf=\"!toolbar && !headerTemplate\">\n                <span class=\"ql-formats\">\n                    <select class=\"ql-header\">\n                      <option value=\"1\">Heading</option>\n                      <option value=\"2\">Subheading</option>\n                      <option selected>Normal</option>\n                    </select>\n                    <select class=\"ql-font\">\n                      <option selected>Sans Serif</option>\n                      <option value=\"serif\">Serif</option>\n                      <option value=\"monospace\">Monospace</option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-bold\" aria-label=\"Bold\" type=\"button\"></button>\n                    <button class=\"ql-italic\" aria-label=\"Italic\" type=\"button\"></button>\n                    <button class=\"ql-underline\" aria-label=\"Underline\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <select class=\"ql-color\"></select>\n                    <select class=\"ql-background\"></select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-list\" value=\"ordered\" aria-label=\"Ordered List\" type=\"button\"></button>\n                    <button class=\"ql-list\" value=\"bullet\" aria-label=\"Unordered List\" type=\"button\"></button>\n                    <select class=\"ql-align\">\n                        <option selected></option>\n                        <option value=\"center\"></option>\n                        <option value=\"right\"></option>\n                        <option value=\"justify\"></option>\n                    </select>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-link\" aria-label=\"Insert Link\" type=\"button\"></button>\n                    <button class=\"ql-image\" aria-label=\"Insert Image\" type=\"button\"></button>\n                    <button class=\"ql-code-block\" aria-label=\"Insert Code Block\" type=\"button\"></button>\n                </span>\n                <span class=\"ql-formats\">\n                    <button class=\"ql-clean\" aria-label=\"Remove Styles\" type=\"button\"></button>\n                </span>\n            </div>\n            <div class=\"p-editor-content\" [ngStyle]=\"style\"></div>\n        </div>\n    `,\n    providers: [EDITOR_VALUE_ACCESSOR],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    styleUrls: ['./editor.css'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class Editor implements AfterViewInit,AfterContentInit,ControlValueAccessor {\n        \n    @Output() onTextChange: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onSelectionChange: EventEmitter<any> = new EventEmitter();\n    \n    @ContentChild(Header) toolbar;\n    \n    @Input() style: any;\n        \n    @Input() styleClass: string;\n    \n    @Input() placeholder: string;\n    \n    @Input() formats: string[];\n\n    @Input() modules: any;\n\n    @Input() bounds: any;\n\n    @Input() scrollingContainer: any;\n\n    @Input() debug: string;\n    \n    @Output() onInit: EventEmitter<any> = new EventEmitter();\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n    \n    value: string;\n    \n    _readonly: boolean;\n    \n    onModelChange: Function = () => {};\n    \n    onModelTouched: Function = () => {};\n    \n    quill: any;\n\n    headerTemplate: TemplateRef<any>;\n    \n    constructor(public el: ElementRef) {}\n\n    ngAfterViewInit() {\n        let editorElement = DomHandler.findSingle(this.el.nativeElement ,'div.p-editor-content'); \n        let toolbarElement = DomHandler.findSingle(this.el.nativeElement ,'div.p-editor-toolbar'); \n        let defaultModule  = {toolbar: toolbarElement};\n        let modules = this.modules ? {...defaultModule, ...this.modules} : defaultModule;\n\n        this.quill = new Quill(editorElement, {\n            modules: modules,\n            placeholder: this.placeholder,\n            readOnly: this.readonly,\n            theme: 'snow',\n            formats: this.formats,\n            bounds: this.bounds,\n            debug: this.debug,\n            scrollingContainer: this.scrollingContainer\n        });\n                \n        if (this.value) {\n            this.quill.setContents(this.quill.clipboard.convert(this.value));\n        }\n        \n        this.quill.on('text-change', (delta, oldContents, source) => {\n            if (source === 'user') {\n                let html = editorElement.children[0].innerHTML;\n                let text = this.quill.getText().trim();\n                if (html === '<p><br></p>') {\n                    html = null;\n                }\n\n                this.onTextChange.emit({\n                    htmlValue: html,\n                    textValue: text,\n                    delta: delta,\n                    source: source\n                });\n                \n                this.onModelChange(html);\n                this.onModelTouched();\n            }\n        });\n        \n        this.quill.on('selection-change', (range, oldRange, source) => {\n            this.onSelectionChange.emit({\n                range: range,\n                oldRange: oldRange,\n                source: source\n            });\n        });\n        \n        this.onInit.emit({\n            editor: this.quill\n        });\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n            }\n        });\n    }\n        \n    writeValue(value: any) : void {\n        this.value = value;\n                \n        if (this.quill) {\n            if (value)\n                this.quill.setContents(this.quill.clipboard.convert(value));\n            else\n                this.quill.setText('');\n        }\n    }\n    \n    registerOnChange(fn: Function): void {\n        this.onModelChange = fn;\n    }\n\n    registerOnTouched(fn: Function): void {\n        this.onModelTouched = fn;\n    }\n    \n    getQuill() {\n        return this.quill;\n    }\n    \n    @Input() get readonly(): boolean {\n        return this._readonly;\n    }\n\n    set readonly(val:boolean) {\n        this._readonly = val;\n        \n        if (this.quill) {\n            if (this._readonly)\n                this.quill.disable();\n            else\n                this.quill.enable();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Editor,SharedModule],\n    declarations: [Editor]\n})\nexport class EditorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}