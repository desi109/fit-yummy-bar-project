{"version":3,"file":"primeng-captcha.umd.js","sources":["../../src/app/components/captcha/captcha.ts","../../src/app/components/captcha/primeng-captcha.ts"],"names":["EventEmitter","Component","ChangeDetectionStrategy","ViewEncapsulation","ElementRef","NgZone","ChangeDetectorRef","Input","Output","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,AfterViewInit,Component,EventEmitter,Input,NgZone,OnDestroy,Output,ElementRef,ChangeDetectionStrategy, ViewEncapsulation, ChangeDetectorRef} from '@angular/core';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n    selector: 'p-captcha',\n    template: `<div></div>`,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None\n})\nexport class Captcha implements AfterViewInit,OnDestroy {\n\n    @Input() siteKey: string = null;\n        \n    @Input() theme = 'light';\n    \n    @Input() type = 'image';\n    \n    @Input() size = 'normal';\n    \n    @Input() tabindex = 0;\n    \n    @Input() language: string = null;\n     \n    @Input() initCallback = \"initRecaptcha\";\n    \n    @Output() onResponse: EventEmitter<any> = new EventEmitter();\n    \n    @Output() onExpire: EventEmitter<any> = new EventEmitter();\n    \n    private _instance: any = null;\n\n    constructor(public el: ElementRef, public _zone: NgZone, public cd: ChangeDetectorRef) {}\n    \n    ngAfterViewInit() {\n        if ((<any>window).grecaptcha) {\n            if (!(<any>window).grecaptcha.render){\n                setTimeout(() =>{\n                    this.init();\n                },100)\n            }\n            else {\n                this.init();\n            }\n        }\n        else {\n            (<any>window)[this.initCallback] = () => {\n              this.init();\n            }\n        } \n    }\n    \n    init()Â {\n        this._instance = (<any>window).grecaptcha.render(this.el.nativeElement.children[0], {\n            'sitekey': this.siteKey,\n            'theme': this.theme,\n            'type': this.type,\n            'size': this.size,\n            'tabindex': this.tabindex,\n            'hl': this.language,\n            'callback': (response: string) => {this._zone.run(() => this.recaptchaCallback(response))},\n            'expired-callback': () => {this._zone.run(() => this.recaptchaExpiredCallback())}\n        });\n    }\n    \n    reset() {\n        if (this._instance === null)\n            return;\n        \n        (<any>window).grecaptcha.reset(this._instance);\n        this.cd.markForCheck();\n    }\n    \n    getResponse(): String {\n        if (this._instance === null)\n            return null;\n        \n        return (<any>window).grecaptcha.getResponse(this._instance);\n    }\n    \n    recaptchaCallback(response: string) {\n        this.onResponse.emit({\n            response: response\n        });\n    }\n\n    recaptchaExpiredCallback() {\n        this.onExpire.emit();\n    }\n    \n    ngOnDestroy() {\n        if (this._instance != null) {\n          (<any>window).grecaptcha.reset(this._instance);\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Captcha],\n    declarations: [Captcha]\n})\nexport class CaptchaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}