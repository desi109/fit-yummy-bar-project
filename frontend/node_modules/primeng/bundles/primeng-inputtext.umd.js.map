{"version":3,"file":"primeng-inputtext.umd.js","sources":["../../src/app/components/inputtext/inputtext.ts","../../src/app/components/inputtext/primeng-inputtext.ts"],"names":["Directive","ElementRef","NgModel","Optional","HostListener","NgModule","CommonModule"],"mappings":";;;;;;;QAgBI,mBAAmB,EAAc,EAAqB,OAAgB;AAAI,YAAvD,OAAE,GAAF,EAAE,CAAY;AAAC,YAAoB,YAAO,GAAP,OAAO,CAAS;AAAC,SAAG;AAC9E,QACI,6BAAS,GAAT;AACJ,YAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAK;AACJ,QAEG,2BAAO,GAAP,UAAQ,CAAC;AACb,YAAQ,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACjC,SAAK;AACJ,QACG,qCAAiB,GAAjB;AAAc,YACV,IAAI,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM;AACxF,iBAAyB,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7D,SAAK;;;;;;;;;;;;;;;;;;;;;;oBACL;AAAC;AAGW,SAtBH;6CARRA,7CAQS;KARA,SAAC,dAUQ,gBAdQC,eAAU;CAKjC,QAAQ,EAAE,cAAc,sBACxB,IAAI,EAAE,rDAN+B,gBACjCC,aAAO,uBAeyBC,aAAQ;QATxC,RAS8C;mBATzB,EAAE,MAAM,3BAS2B;oBARxD,qBAAqB,EAAE,MAAM,0BAC7B,3EASC,0BAIJC,iBAAY,SAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;AAClC;SAduB,EAAE,QAAQ,sBAC/B,zCAaK;IAZT,JAgBE,QAWH;AAA6B;;;;;;;;;;;;wMAAS;AAAC;AAAgC,SAA9D;AAAC;AAAC,ICtCX;0CDiCCC,1CChCD;AAEA;AACO;ED6BE,SAAC,sBACN,jCC9BI;KD8BG,EAAE,CAACC,mBAAY,CAAC,5BC7Bd;AAA+C;ED8BxD,OAAO,EAAE,CAAC,SAAS,CAAC,sBACpB,YAAY,EAAE,CAAC,3DC/B0C;AAAmE;AD+BpG,CAAC,DC/BoG;aDgChI,bChCsI","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,DoCheck,Optional} from '@angular/core';\nimport {NgModel} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\n\n@Directive({\n    selector: '[pInputText]',\n    host: {\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled'\n    }\n})\nexport class InputText implements DoCheck {\n\n    filled: boolean;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel) {}\n        \n    ngDoCheck() {\n        this.updateFilledState();\n    }\n    \n    @HostListener('input', ['$event']) \n    onInput(e) {\n        this.updateFilledState();\n    }\n    \n    updateFilledState() {\n        this.filled = (this.el.nativeElement.value && this.el.nativeElement.value.length) ||\n                        (this.ngModel && this.ngModel.model);\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputText],\n    declarations: [InputText]\n})\nexport class InputTextModule { }","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}