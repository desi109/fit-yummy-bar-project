{"version":3,"file":"primeng-badge.umd.js","sources":["../../src/app/components/badge/badge.ts","../../src/app/components/badge/primeng-badge.ts"],"names":["UniqueComponentId","DomHandler","Directive","ElementRef","Input","Component","ChangeDetectionStrategy","ViewEncapsulation","NgModule","CommonModule","SharedModule"],"mappings":"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","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, QueryList, ContentChildren, TemplateRef, Directive, OnDestroy, AfterViewInit, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { UniqueComponentId } from 'primeng/utils';\n\n@Directive({\n    selector: '[pBadge]'\n})\nexport class BadgeDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\n            \n    public _value: string;\n            \n    public initialized: boolean;\n\n    private id: string;\n    \n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this.id = UniqueComponentId() + '_badge';\n        let el = this.el.nativeElement.nodeName.indexOf(\"-\") != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement; \n\n        let badge = document.createElement('span');\n        badge.id = this.id ;\n        badge.className = 'p-badge p-component';\n\n        if (this.severity) {\n            DomHandler.addClass(badge, 'p-badge-' + this.severity);\n        }\n        \n        if (this.value != null) {\n            badge.appendChild(document.createTextNode(this.value));\n            \n            if (String(this.value).length === 1) {\n                DomHandler.addClass(badge, 'p-badge-no-gutter');\n            }\n        }\n        else {\n            DomHandler.addClass(badge, 'p-badge-dot');\n        }\n\n        DomHandler.addClass(el, 'p-overlay-badge');\n        el.appendChild(badge);\n\n        this.initialized = true;\n    }\n\n    @Input() get value(): string {\n        return this._value;\n    }\n\n    set value(val: string) {\n        if (val !== this._value) {\n            this._value = val;\n\n            if (this.initialized) {\n                let badge = document.getElementById(this.id);\n\n                if (this._value) {\n                    if (DomHandler.hasClass(badge, 'p-badge-dot'))\n                        DomHandler.removeClass(badge, 'p-badge-dot');\n\n                    if (String(this._value).length === 1) {\n                        DomHandler.addClass(badge, 'p-badge-no-gutter');\n                    }\n                    else {\n                        DomHandler.removeClass(badge, 'p-badge-no-gutter');\n                    }\n                }\n                else if (!this._value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n                    DomHandler.addClass(badge, 'p-badge-dot');\n                }\n\n                badge.innerHTML = '';\n                badge.appendChild(document.createTextNode(this._value));\n            }\n        }\n    }\n\n    @Input() severity: string;\n        \n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-badge',\n    template: `\n        <span [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n                {{value}}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./badge.css']\n})\nexport class Badge {\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() size: string;\n    \n    @Input() severity: string;\n    \n    @Input() value: string;\n    \n    containerClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.value && String(this.value).length === 1,\n            'p-badge-lg': this.size === 'large',\n            'p-badge-xl': this.size === 'xlarge',\n            'p-badge-info': this.severity === 'info',\n            'p-badge-success': this.severity === 'success',\n            'p-badge-warning': this.severity === 'warning',\n            'p-badge-danger': this.severity === 'danger'\n        };\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Badge, BadgeDirective, SharedModule],\n    declarations: [Badge, BadgeDirective]\n})\nexport class BadgeModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}