{"version":3,"file":"primeng-accordion.umd.js","sources":["../../src/app/components/accordion/accordion.ts","../../src/app/components/accordion/primeng-accordion.ts"],"names":["EventEmitter","Component","trigger","state","style","transition","animate","ChangeDetectionStrategy","ViewEncapsulation","Inject","forwardRef","ChangeDetectorRef","Input","Output","ContentChildren","Header","PrimeTemplate","ElementRef","NgModule","CommonModule","SharedModule"],"mappings":"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","sourcesContent":["import { NgModule, Component, ElementRef, AfterContentInit, OnDestroy, Input, Output, EventEmitter, \n    ContentChildren, QueryList, ChangeDetectorRef, Inject, forwardRef, TemplateRef, ViewRef, ChangeDetectionStrategy, ViewEncapsulation} from '@angular/core';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule, Header, PrimeTemplate } from 'primeng/api';\nimport { BlockableUI } from 'primeng/api';\nimport { Subscription } from 'rxjs';\n\nlet idx: number = 0;\n\n@Component({\n    selector: 'p-accordionTab',\n    template: `\n        <div class=\"p-accordion-tab\" [ngClass]=\"{'p-accordion-tab-active': selected}\">\n            <div class=\"p-accordion-header\" [ngClass]=\"{'p-highlight': selected, 'p-disabled': disabled}\">\n                <a role=\"tab\" class=\"p-accordion-header-link\" (click)=\"toggle($event)\" (keydown)=\"onKeydown($event)\" [attr.tabindex]=\"disabled ? null : 0\"\n                    [attr.id]=\"id\" [attr.aria-controls]=\"id + '-content'\" [attr.aria-expanded]=\"selected\">\n                    <span class=\"p-accordion-toggle-icon\" [ngClass]=\"selected ? accordion.collapseIcon : accordion.expandIcon\"></span>\n                    <span class=\"p-accordion-header-text\" *ngIf=\"!hasHeaderFacet\">\n                        {{header}}\n                    </span>\n                    <ng-container *ngTemplateOutlet=\"headerTemplate\"></ng-container>\n                    <ng-content select=\"p-header\" *ngIf=\"hasHeaderFacet\"></ng-content>\n                </a>\n            </div>\n            <div [attr.id]=\"id + '-content'\" class=\"p-toggleable-content\" [@tabContent]=\"selected ? {value: 'visible', params: {transitionParams: transitionOptions}} : {value: 'hidden', params: {transitionParams: transitionOptions}}\"\n                role=\"region\" [attr.aria-hidden]=\"!selected\" [attr.aria-labelledby]=\"id\">\n                <div class=\"p-accordion-content\">\n                    <ng-content></ng-content>\n                    <ng-container *ngIf=\"contentTemplate && (cache ? loaded : selected)\">\n                        <ng-container *ngTemplateOutlet=\"contentTemplate\"></ng-container>\n                    </ng-container>\n                </div>\n            </div>\n        </div>\n    `,\n    animations: [\n        trigger('tabContent', [\n            state('hidden', style({\n                height: '0',\n                overflow: 'hidden'\n            })),\n            state('visible', style({\n                height: '*'\n            })),\n            transition('visible <=> hidden', [style({overflow: 'hidden'}), animate('{{transitionParams}}')]),\n            transition('void => *', animate(0))\n        ])\n    ],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./accordion.css']\n})\nexport class AccordionTab implements AfterContentInit,OnDestroy {\n\n    @Input() header: string;\n\n    @Input() disabled: boolean;\n\n    @Input() cache: boolean = true;\n\n    @Output() selectedChange: EventEmitter<any> = new EventEmitter();\n\n    @Input() transitionOptions: string = '400ms cubic-bezier(0.86, 0, 0.07, 1)';\n\n    @ContentChildren(Header) headerFacet: QueryList<Header>;\n\n    @ContentChildren(PrimeTemplate) templates: QueryList<any>;\n\n    private _selected: boolean;\n\n    @Input() get selected(): any {\n        return this._selected;\n    }\n\n    set selected(val: any) {\n        this._selected = val;\n        \n        if (!this.loaded) {\n            if (this._selected && this.cache) {\n                this.loaded = true;\n            }\n\n            this.changeDetector.detectChanges();\n        }\n    }\n\n    contentTemplate: TemplateRef<any>;\n\n    headerTemplate: TemplateRef<any>;\n\n    id: string = `p-accordiontab-${idx++}`;\n\n    loaded: boolean;\n\n    accordion: Accordion;\n\n    constructor(@Inject(forwardRef(() => Accordion)) accordion, public changeDetector: ChangeDetectorRef) {\n        this.accordion = accordion as Accordion;\n    }\n\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch(item.getType()) {\n                case 'content':\n                    this.contentTemplate = item.template;\n                break;\n\n                case 'header':\n                    this.headerTemplate = item.template;\n                break;\n                \n                default:\n                    this.contentTemplate = item.template;\n                break;\n            }\n        });\n    }\n\n    toggle(event) {\n        if (this.disabled) {\n            return false;\n        }\n\n        let index = this.findTabIndex();\n\n        if (this.selected) {\n            this.selected = false;\n            this.accordion.onClose.emit({ originalEvent: event, index: index });\n        }\n        else {\n            if (!this.accordion.multiple) {\n                for (var i = 0; i < this.accordion.tabs.length; i++) {\n                    this.accordion.tabs[i].selected = false;\n                    this.accordion.tabs[i].selectedChange.emit(false);\n                    this.accordion.tabs[i].changeDetector.markForCheck();\n                }\n            }\n\n            this.selected = true;\n            this.loaded = true;\n            this.accordion.onOpen.emit({ originalEvent: event, index: index });\n        }\n\n        this.selectedChange.emit(this.selected);\n        this.accordion.updateActiveIndex();\n        this.changeDetector.markForCheck();\n\n        event.preventDefault();\n    }\n\n    findTabIndex() {\n        let index = -1;\n        for (var i = 0; i < this.accordion.tabs.length; i++) {\n            if (this.accordion.tabs[i] == this) {\n                index = i;\n                break;\n            }\n        }\n        return index;\n    }\n\n    get hasHeaderFacet(): boolean {\n        return this.headerFacet && this.headerFacet.length > 0;\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        if (event.which === 32 || event.which === 13) {\n            this.toggle(event);\n            event.preventDefault();\n        }\n    }\n\n    ngOnDestroy() {\n        this.accordion.tabs.splice(this.findTabIndex(), 1);\n    }\n}\n\n@Component({\n    selector: 'p-accordion',\n    template: `\n        <div [ngClass]=\"'p-accordion p-component'\" [ngStyle]=\"style\" [class]=\"styleClass\" role=\"tablist\">\n            <ng-content></ng-content>\n        </div>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class Accordion implements BlockableUI, AfterContentInit, OnDestroy {\n    \n    @Input() multiple: boolean;\n    \n    @Output() onClose: EventEmitter<any> = new EventEmitter();\n\n    @Output() onOpen: EventEmitter<any> = new EventEmitter();\n\n    @Input() style: any;\n    \n    @Input() styleClass: string;\n\n    @Input() expandIcon: string = 'pi pi-fw pi-chevron-right';\n\n    @Input() collapseIcon: string = 'pi pi-fw pi-chevron-down';\n\n    @Output() activeIndexChange: EventEmitter<any> = new EventEmitter();\n    \n    @ContentChildren(AccordionTab) tabList: QueryList<AccordionTab>;\n\n    tabListSubscription: Subscription;\n    \n    private _activeIndex: any;\n\n    preventActiveIndexPropagation: boolean;\n    \n    public tabs: AccordionTab[] = [];\n\n    constructor(public el: ElementRef, public changeDetector: ChangeDetectorRef) {}\n\n    ngAfterContentInit() {\n        this.initTabs();\n\n        this.tabListSubscription = this.tabList.changes.subscribe(_ => {\n            this.initTabs();\n        });\n    }\n\n    initTabs(): any {\n        this.tabs = this.tabList.toArray();\n        this.updateSelectionState();\n        this.changeDetector.markForCheck();\n    }\n      \n    getBlockableElement(): HTMLElement {\n        return this.el.nativeElement.children[0];\n    } \n    \n    @Input() get activeIndex(): any {\n        return this._activeIndex;\n    }\n\n    set activeIndex(val: any) {\n        this._activeIndex = val;\n        if (this.preventActiveIndexPropagation) {\n            this.preventActiveIndexPropagation = false;\n            return;\n        }\n\n        this.updateSelectionState();\n    }\n\n    updateSelectionState() {\n        if (this.tabs && this.tabs.length && this._activeIndex != null) {\n            for (let i = 0; i < this.tabs.length; i++) {\n                let selected = this.multiple ? this._activeIndex.includes(i) : (i === this._activeIndex);\n                let changed = selected !== this.tabs[i].selected;\n\n                if (changed) {\n                    this.tabs[i].selected = selected;\n                    this.tabs[i].selectedChange.emit(selected);\n                    this.tabs[i].changeDetector.markForCheck();\n                }\n            }\n        }\n    }\n\n    updateActiveIndex() {\n        let index: any = this.multiple ? [] : null;\n        this.tabs.forEach((tab, i) => {\n            if (tab.selected) {\n                if (this.multiple) {\n                    index.push(i);\n                }\n                else {\n                    index = i;\n                    return;\n                }\n            }\n        });\n\n        this.preventActiveIndexPropagation = true;\n        this.activeIndexChange.emit(index);\n    }\n\n    ngOnDestroy() {\n        if (this.tabListSubscription) {\n            this.tabListSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Accordion,AccordionTab,SharedModule],\n    declarations: [Accordion,AccordionTab]\n})\nexport class AccordionModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}