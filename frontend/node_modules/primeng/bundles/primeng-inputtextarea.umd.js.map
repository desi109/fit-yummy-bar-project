{"version":3,"file":"primeng-inputtextarea.umd.js","sources":["../../src/app/components/inputtextarea/inputtextarea.ts","../../src/app/components/inputtextarea/primeng-inputtextarea.ts"],"names":["EventEmitter","Directive","ElementRef","NgModel","Optional","NgControl","ChangeDetectorRef","Input","Output","HostListener","NgModule","CommonModule"],"mappings":"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","sourcesContent":["import {NgModule,Directive,ElementRef,HostListener,Input,Output, EventEmitter,Optional, AfterViewInit, OnInit, OnDestroy, ChangeDetectorRef} from '@angular/core';\nimport {NgModel, NgControl} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport { Subscription } from 'rxjs';\n\n@Directive({\n    selector: '[pInputTextarea]',\n    host: {\n        '[class.p-inputtextarea]': 'true',\n        '[class.p-inputtext]': 'true',\n        '[class.p-component]': 'true',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n    }\n})\nexport class InputTextarea implements OnInit, AfterViewInit, OnDestroy  {\n    \n    @Input() autoResize: boolean;\n    \n    @Output() onResize: EventEmitter<any> = new EventEmitter();\n        \n    filled: boolean;\n\n    cachedScrollHeight:number;\n\n    ngModelSubscription: Subscription;\n\n    ngControlSubscription: Subscription;\n\n    constructor(public el: ElementRef, @Optional() public ngModel: NgModel, @Optional() public control : NgControl, private cd: ChangeDetectorRef) {}\n        \n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() =>{\n                this.updateState();\n            })\n        }\n\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n\n    @HostListener('input', ['$event'])\n    onInput(e) {\n        this.updateState();\n    }\n    \n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n    \n    @HostListener('focus', ['$event'])\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    @HostListener('blur', ['$event'])\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    \n    resize(event?: Event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = \"scroll\";\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = \"hidden\";\n        }\n\n        this.onResize.emit(event||{});\n    }\n\n    updateState() {\n        this.updateFilledState();\n            \n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [InputTextarea],\n    declarations: [InputTextarea]\n})\nexport class InputTextareaModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}