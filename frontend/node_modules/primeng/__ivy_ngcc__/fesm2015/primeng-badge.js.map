{"version":3,"file":"primeng-badge.js","sources":["../../src/app/components/badge/badge.ts","../../src/app/components/badge/primeng-badge.ts"],"names":[],"mappings":"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","sourcesContent":["import { NgModule, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, QueryList, ContentChildren, TemplateRef, Directive, OnDestroy, AfterViewInit, ElementRef } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { UniqueComponentId } from 'primeng/utils';\n\n@Directive({\n    selector: '[pBadge]'\n})\nexport class BadgeDirective implements AfterViewInit, OnDestroy {\n\n    @Input() iconPos: 'left' | 'right' | 'top' | 'bottom' = 'left';\n            \n    public _value: string;\n            \n    public initialized: boolean;\n\n    private id: string;\n    \n    constructor(public el: ElementRef) {}\n    \n    ngAfterViewInit() {\n        this.id = UniqueComponentId() + '_badge';\n        let el = this.el.nativeElement.nodeName.indexOf(\"-\") != -1 ? this.el.nativeElement.firstChild : this.el.nativeElement; \n\n        let badge = document.createElement('span');\n        badge.id = this.id ;\n        badge.className = 'p-badge p-component';\n\n        if (this.severity) {\n            DomHandler.addClass(badge, 'p-badge-' + this.severity);\n        }\n        \n        if (this.value != null) {\n            badge.appendChild(document.createTextNode(this.value));\n            \n            if (String(this.value).length === 1) {\n                DomHandler.addClass(badge, 'p-badge-no-gutter');\n            }\n        }\n        else {\n            DomHandler.addClass(badge, 'p-badge-dot');\n        }\n\n        DomHandler.addClass(el, 'p-overlay-badge');\n        el.appendChild(badge);\n\n        this.initialized = true;\n    }\n\n    @Input() get value(): string {\n        return this._value;\n    }\n\n    set value(val: string) {\n        if (val !== this._value) {\n            this._value = val;\n\n            if (this.initialized) {\n                let badge = document.getElementById(this.id);\n\n                if (this._value) {\n                    if (DomHandler.hasClass(badge, 'p-badge-dot'))\n                        DomHandler.removeClass(badge, 'p-badge-dot');\n\n                    if (String(this._value).length === 1) {\n                        DomHandler.addClass(badge, 'p-badge-no-gutter');\n                    }\n                    else {\n                        DomHandler.removeClass(badge, 'p-badge-no-gutter');\n                    }\n                }\n                else if (!this._value && !DomHandler.hasClass(badge, 'p-badge-dot')) {\n                    DomHandler.addClass(badge, 'p-badge-dot');\n                }\n\n                badge.innerHTML = '';\n                badge.appendChild(document.createTextNode(this._value));\n            }\n        }\n    }\n\n    @Input() severity: string;\n        \n    ngOnDestroy() {\n        this.initialized = false;\n    }\n}\n\n@Component({\n    selector: 'p-badge',\n    template: `\n        <span [ngClass]=\"containerClass()\" [class]=\"styleClass\" [ngStyle]=\"style\">\n                {{value}}\n        </span>\n    `,\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n    styleUrls: ['./badge.css']\n})\nexport class Badge {\n\n    @Input() styleClass: string;\n\n    @Input() style: any;\n\n    @Input() size: string;\n    \n    @Input() severity: string;\n    \n    @Input() value: string;\n    \n    containerClass() {\n        return {\n            'p-badge p-component': true,\n            'p-badge-no-gutter': this.value && String(this.value).length === 1,\n            'p-badge-lg': this.size === 'large',\n            'p-badge-xl': this.size === 'xlarge',\n            'p-badge-info': this.severity === 'info',\n            'p-badge-success': this.severity === 'success',\n            'p-badge-warning': this.severity === 'warning',\n            'p-badge-danger': this.severity === 'danger'\n        };\n    }\n}\n\n@NgModule({\n    imports: [CommonModule],\n    exports: [Badge, BadgeDirective, SharedModule],\n    declarations: [Badge, BadgeDirective]\n})\nexport class BadgeModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}