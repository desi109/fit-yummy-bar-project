{"version":3,"file":"listbox.d.ts","sources":["listbox.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["import { ElementRef, EventEmitter, AfterContentInit, QueryList, TemplateRef, ChangeDetectorRef } from '@angular/core';\nimport { FilterService } from 'primeng/api';\nimport { ControlValueAccessor } from '@angular/forms';\nexport declare const LISTBOX_VALUE_ACCESSOR: any;\nexport declare class Listbox implements AfterContentInit, ControlValueAccessor {\n    el: ElementRef;\n    cd: ChangeDetectorRef;\n    filterService: FilterService;\n    multiple: boolean;\n    style: any;\n    styleClass: string;\n    listStyle: any;\n    listStyleClass: string;\n    readonly: boolean;\n    disabled: boolean;\n    checkbox: boolean;\n    filter: boolean;\n    filterMatchMode: string;\n    filterLocale: string;\n    metaKeySelection: boolean;\n    dataKey: string;\n    showToggleAll: boolean;\n    optionLabel: string;\n    optionValue: string;\n    optionGroupChildren: string;\n    optionGroupLabel: string;\n    optionDisabled: string;\n    ariaFilterLabel: string;\n    filterPlaceHolder: string;\n    group: boolean;\n    onChange: EventEmitter<any>;\n    onClick: EventEmitter<any>;\n    onDblClick: EventEmitter<any>;\n    headerCheckboxViewChild: ElementRef;\n    headerFacet: any;\n    footerFacet: any;\n    templates: QueryList<any>;\n    _options: any[];\n    itemTemplate: TemplateRef<any>;\n    groupTemplate: TemplateRef<any>;\n    headerTemplate: TemplateRef<any>;\n    footerTemplate: TemplateRef<any>;\n    _filterValue: string;\n    _filteredOptions: any[];\n    filtered: boolean;\n    value: any;\n    onModelChange: Function;\n    onModelTouched: Function;\n    optionTouched: boolean;\n    focus: boolean;\n    headerCheckboxFocus: boolean;\n    constructor(el: ElementRef, cd: ChangeDetectorRef, filterService: FilterService);\n    get options(): any[];\n    set options(val: any[]);\n    get filterValue(): string;\n    set filterValue(val: string);\n    ngAfterContentInit(): void;\n    getOptionLabel(option: any): any;\n    getOptionGroupChildren(optionGroup: any): any;\n    getOptionGroupLabel(optionGroup: any): any;\n    getOptionValue(option: any): any;\n    isOptionDisabled(option: any): any;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    onOptionClick(event: Event, option: any): void;\n    onOptionTouchEnd(option: any): void;\n    onOptionDoubleClick(event: Event, option: any): any;\n    onOptionClickSingle(event: any, option: any): void;\n    onOptionClickMultiple(event: any, option: any): void;\n    onOptionClickCheckbox(event: any, option: any): void;\n    removeOption(option: any): void;\n    isSelected(option: any): boolean;\n    get allChecked(): boolean;\n    get optionsToRender(): any[];\n    hasFilter(): boolean;\n    onFilter(event: KeyboardEvent): void;\n    activateFilter(): void;\n    get toggleAllDisabled(): boolean;\n    toggleAll(event: any): void;\n    checkAll(): void;\n    uncheckAll(): void;\n    onOptionKeyDown(event: KeyboardEvent, option: any): void;\n    findNextItem(item: any): any;\n    findPrevItem(item: any): any;\n    onHeaderCheckboxFocus(): void;\n    onHeaderCheckboxBlur(): void;\n}\nexport declare class ListboxModule {\n}\n"]}