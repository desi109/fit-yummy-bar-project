{"version":3,"file":"knob.d.ts","sources":["knob.d.ts"],"names":[],"mappings":"AAAA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;;;AACA","sourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter } from '@angular/core';\nexport declare const KNOB_VALUE_ACCESSOR: any;\nexport declare class Knob {\n    private cd;\n    private el;\n    styleClass: string;\n    style: any;\n    severity: string;\n    valueColor: string;\n    rangeColor: string;\n    textColor: string;\n    valueTemplate: string;\n    name: string;\n    size: number;\n    step: number;\n    min: number;\n    max: number;\n    strokeWidth: number;\n    disabled: boolean;\n    showValue: boolean;\n    readonly: boolean;\n    onChange: EventEmitter<any>;\n    radius: number;\n    midX: number;\n    midY: number;\n    minRadians: number;\n    maxRadians: number;\n    value: number;\n    windowMouseMoveListener: any;\n    windowMouseUpListener: any;\n    windowTouchMoveListener: any;\n    windowTouchEndListener: any;\n    onModelChange: Function;\n    onModelTouched: Function;\n    constructor(cd: ChangeDetectorRef, el: ElementRef);\n    mapRange(x: any, inMin: any, inMax: any, outMin: any, outMax: any): any;\n    onClick(event: any): void;\n    updateValue(offsetX: any, offsetY: any): void;\n    updateModel(angle: any, start: any): void;\n    onMouseDown(event: any): void;\n    onMouseUp(event: any): void;\n    onTouchStart(event: any): void;\n    onTouchEnd(event: any): void;\n    onMouseMove(event: any): void;\n    onTouchMove(event: any): void;\n    writeValue(value: any): void;\n    registerOnChange(fn: Function): void;\n    registerOnTouched(fn: Function): void;\n    setDisabledState(val: boolean): void;\n    containerClass(): {\n        'p-knob p-component': boolean;\n        'p-disabled': boolean;\n    };\n    rangePath(): string;\n    valuePath(): string;\n    zeroRadians(): any;\n    valueRadians(): any;\n    minX(): number;\n    minY(): number;\n    maxX(): number;\n    maxY(): number;\n    zeroX(): number;\n    zeroY(): number;\n    valueX(): number;\n    valueY(): number;\n    largeArc(): 1 | 0;\n    sweep(): 1 | 0;\n    valueToDisplay(): string;\n    get _value(): number;\n}\nexport declare class KnobModule {\n}\n"]}